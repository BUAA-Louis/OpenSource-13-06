20年前，在那个windows大行其道的年代，简陋的不能再简陋的Linux操作系统雏形，在芬兰学生Linus业余爱好中被开发出来。20年后，Redhat、Opensuse、Fedora、Debian、Turbo等等的Linux再开发版在世界各地的操作系统市场都占一席之地。Linux已然成为世界级的操作系统。
在《大教堂和市集》这本书里，作者Eric详细阐述并分析了自己的一个开源项目fetchmail是如何借鉴Linux而获得最终成功的，道出了Linux的成功离不开的是Linus才华横溢的设计和“市集”般的开发模式。Eric并不是生硬的按部就班Linux的模式，在工程项目实践中，他共总结出19条睿智的观点：
（1）每一个好的软件的起因都是挠到了开发者本人的痒处
（2）好的程序员知道写什么。伟大的程序员知道改写（和重复使用）什么。
（3）“计划扔掉一个；无论如何你都会扔掉一个的。”  （弗里德•布洛克 《人月神话》第11 章）
（4）如果你有正确的态度，有意思的问题会找到你。
（5）当你对一个项目失去兴趣时，你的最后的职责是把它交给一个称职的继承者。
（6）把用户像合作者来对待是通往快速改进代码和有效调试的最佳通道
（7）早发布。常发布。听取用户的意见。
（8）如果beta 测试者和合作开发者的群体足够大的话，几乎每个问题都会快速显形，会有人轻而易举地把它解决。
（9）聪明的数据结构和愚蠢的代码要不反过来好的多。
（10） 如果你以“最有价值资源”来对待你的beta 测试者，他们会以成为“最有价值资源”来回应。
（11）仅次于拥有好的主意的是认识到来自于用户的好主意。有时候后者更好一些。
（12）最有突破和创新的方案常常来自于意识到你把问题的模型弄错了。
（13）“设计达到完美的时候，不是增加得不能再增加了、而是减少得不能再减少了” 。
（14）任何一个工具都应该达到预期的用处，但是一个真正棒的工具会带来你从来预期不到的用处。
（15）在写任何关口 件的时候，花点功夫尽可能不要干扰数据流—— 除非用户强迫你，永远不要扔掉任何信息！
（16）当你的语言离图灵穷尽还差得远的时候，，给语法加点风味可以有帮助。
（17）一个安全系统的安全性取决于它保守的秘密的安全性。小心伪秘密。
（18）要解决一个有意思的问题，首先找到一个你觉得有意思的问题。
（19）如果开发的协调者有一个至少和互联网一样好的通讯媒介，而且懂得如何不通过强迫来领导，多个头脑不可避免地优于单个头脑。
不得不说，这是一本经典的书。读完整书后最大的感受就是，被Linus的开发模式和Eric的睿智观点所折服。尤其是传统软件开发组织结构的布洛克法则（布洛克法则认为，随着开发人员数目的增加，项目的复杂程度和通讯成本按平方增加，而业绩仅以直线增加）和Linux开发模式的Linus法则（只要眼球足够多，所有臭虫都好捉）的对比，更使人意识到，“开源软件的前沿会属于那些开始于个人的远见和才华、然后通过有效的建设相关志愿者社区来扩展放大的人们”。
